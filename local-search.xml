<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Git使用指南</title>
    <link href="/2022/09/09/Git%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <url>/2022/09/09/Git%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h3 id="配置Git环境"><a href="#配置Git环境" class="headerlink" title="配置Git环境"></a>配置Git环境</h3><p><img src="https://ehumblog.oss-cn-beijing.aliyuncs.com/git2.jpg" alt="Git"></p><blockquote><p>在新电脑上检查是否安装Git</p></blockquote><p><code>git --version</code>得到版本号确定已安装好Git</p><blockquote><p>配置Git用户名与邮箱账户</p></blockquote><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.name</span> <span class="hljs-string">&quot;EHUM&quot;</span><br>git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.email</span> <span class="hljs-string">&quot;ehum@sina.com&quot;</span><br></code></pre></td></tr></table></figure><p>如要查看配置信息可输入</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros">git<span class="hljs-built_in"> config </span>--list<br><br>credential.<span class="hljs-attribute">helper</span>=osxkeychain<br>user.<span class="hljs-attribute">name</span>=EHUM<br>user.<span class="hljs-attribute">email</span>=ehum@sina.com<br></code></pre></td></tr></table></figure><blockquote><p>检查电脑是否创建过密钥</p></blockquote><p><code>cd ~/.ssh</code> 打开文件夹为空则未生成，这时候需要自己创建一个密钥文件</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs excel">ssh-keygen -<span class="hljs-built_in">t</span> rsa -C <span class="hljs-string">&quot;ehum@sina.com&quot;</span><br><br>命令要求输入密码，无需输入，回车跳过即可<br></code></pre></td></tr></table></figure><p>这时密钥已在 <em><strong>~&#x2F;.ssh</strong></em> 中创建完成<br>复制 <em><strong>~&#x2F;.ssh&#x2F;id_rsa.pub</strong></em> 中的粘贴内容到 Github 设置中，起一个易记的标题，就可以使用了。</p><p><img src="https://ehumblog.oss-cn-beijing.aliyuncs.com/git1.jpg" alt="Git图解" title="Git图解"></p><h3 id="正式使用Git"><a href="#正式使用Git" class="headerlink" title="正式使用Git"></a>正式使用Git</h3><p>创建一个Git库。</p><ol><li>为自己的项目起个名字。</li><li>用这个名字创建一个文件夹。</li><li>cd进入这个文件夹。</li><li><code>git init</code></li></ol><p>OK，一个Git仓库就创建好了，这时会有一个 <em><strong>.git</strong></em> 隐藏文件夹，它的作用是记录我们的版本变化。<br>每当有文件要提交到代码仓库(Git)，我们可以使用add命令添加到库中</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros">git <span class="hljs-built_in">add</span> README.md<br><span class="hljs-comment">#将README文件添加到代码库中</span><br><br>git <span class="hljs-built_in">add</span> .<br><span class="hljs-comment">#将文件夹中所有文件添加到代码库中</span><br></code></pre></td></tr></table></figure><p>如果这时你去查看Github上面会发现一切还没有上传过去。是的，我只是将代码添加到了库中，还没提交，使用这条命令将本地仓库的代码提交</p><p><code>git commit -m &quot;提交说明&quot;</code></p><p>多次提交就会忘记提交的具体内容了，这时候就体现出了提交说明的重要性了。配合</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sql">git log<br><br><span class="hljs-keyword">commit</span> b517ccd7418cc8f15dee42b9d5d4ca4164eea95f (HEAD <span class="hljs-operator">-</span><span class="hljs-operator">&gt;</span> master)<br>Author: EHUM <span class="hljs-operator">&lt;</span>ehum<span class="hljs-variable">@sina</span>.com<span class="hljs-operator">&gt;</span><br><span class="hljs-type">Date</span>:   Sat Mar <span class="hljs-number">12</span> <span class="hljs-number">14</span>:<span class="hljs-number">05</span>:<span class="hljs-number">58</span> <span class="hljs-number">2022</span> <span class="hljs-operator">+</span><span class="hljs-number">0800</span><br><br>    日常同步<br><br><span class="hljs-keyword">commit</span> <span class="hljs-number">3189</span>b2396ec43c5aee0f17ad4a8af30a05b765be (origin<span class="hljs-operator">/</span>master)<br>Author: EHUM <span class="hljs-operator">&lt;</span>ehum<span class="hljs-variable">@sina</span>.com<span class="hljs-operator">&gt;</span><br><span class="hljs-type">Date</span>:   Fri Mar <span class="hljs-number">11</span> <span class="hljs-number">23</span>:<span class="hljs-number">23</span>:<span class="hljs-number">31</span> <span class="hljs-number">2022</span> <span class="hljs-operator">+</span><span class="hljs-number">0800</span><br><br>    SHELL初学<br></code></pre></td></tr></table></figure><p>git log 命令查看历史记录与说明，就很清晰了。<br>说来有些惭愧，提交也不会让你代码出现在你的网络代码仓库中，下一个动作叫做“发布”，只有发布后的代码，才会到达你的 Github&#x2F;Gitee 上面。</p><p><code>git push -u origin &quot;master&quot;</code></p><p>鉴于国内访问Github的速度，我的仓库搭建在了Gitee上面，这需要我告知Git要将代码发布到Gitee上面，每一个Git项目(文件夹)都需要加一句命令。</p><p><code>git remote add origin http://gitee.com/EHUM/仓库名称.git</code></p><p>这之后我们发布的代码就到了Gitee相应的仓库上面了。</p><p>到目前为止，我觉得已经学习到了个人编写小脚本的全部Git知识了，后面还会有一些Git的其它功能，供大家速查。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">git clone http:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/xxx/yyy</span><br><span class="hljs-comment">#将Github上的项目下载到本地</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>-Bash</category>
      
    </categories>
    
    
    <tags>
      
      <tag>-命令行工具 -Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>brew安装Nodejs遇到的问题</title>
    <link href="/2022/09/09/brew%E5%AE%89%E8%A3%85Nodejs%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/2022/09/09/brew%E5%AE%89%E8%A3%85Nodejs%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="brew安装Nodejs遇到的问题"><a href="#brew安装Nodejs遇到的问题" class="headerlink" title="brew安装Nodejs遇到的问题"></a>brew安装Nodejs遇到的问题</h1><p>在M1芯片的Mac中安装Node.js与平时稍微有点不同，需要多加一行命令建立连接。</p><p>首先使用brew安装Node.js。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew search node<br><br>==&gt; Formulae<br>libbitcoin-node          node-build               node@12                  nodebrew<br>llnode                   node-sass                node@14 ✔                nodeenv<br>node                     node@10                  node_exporter            nodenv<br>==&gt; Casks<br>nodebox                                           nodeclipse<br><br>If you meant <span class="hljs-string">&quot;node&quot;</span> specifically:<br>It was migrated from homebrew/cask to homebrew/core.<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew install node@14<br></code></pre></td></tr></table></figure><p>安装完成后在终端执行Node返回</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">zsh: <span class="hljs-built_in">command</span> not found: node<br></code></pre></td></tr></table></figure><p>我们加一条命令给Node建立链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew <span class="hljs-built_in">link</span> --overwrite --force node@14<br><br>Linking /opt/homebrew/Cellar/node@14/14.17.1... 3857 symlinks created.<br><br>If you need to have this software first <span class="hljs-keyword">in</span> your PATH instead consider running:<br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;export PATH=&quot;/opt/homebrew/opt/node@14/bin:$PATH&quot;&#x27;</span> &gt;&gt; ~/.zshrc<br></code></pre></td></tr></table></figure><p>看到下面这条返回结果，Node已经可以使用了。</p>]]></content>
    
    
    <categories>
      
      <category>-Bash</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Node.js</tag>
      
      <tag>命令行工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>安装Oh-my-zsh</title>
    <link href="/2022/09/09/%E5%AE%89%E8%A3%85Oh-my-zsh/"/>
    <url>/2022/09/09/%E5%AE%89%E8%A3%85Oh-my-zsh/</url>
    
    <content type="html"><![CDATA[<h1 id="安装Oh-my-zsh"><a href="#安装Oh-my-zsh" class="headerlink" title="安装Oh-my-zsh"></a>安装Oh-my-zsh</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">export</span> <span class="hljs-attribute">REMOTE</span>=https://gitee.com/imirror/ohmyzsh.git<br>sh -c <span class="hljs-string">&quot;<span class="hljs-variable">$(curl -fsSL https://cdn.jsdelivr.net/gh/ohmyzsh/ohmyzsh/tools/install.sh)</span>&quot;</span><br></code></pre></td></tr></table></figure><h6 id="更改Oh-my-zsh配置文件"><a href="#更改Oh-my-zsh配置文件" class="headerlink" title="更改Oh-my-zsh配置文件"></a>更改Oh-my-zsh配置文件</h6><p><code>vim ~/.zshrc</code></p><h6 id="刷新配置以生效"><a href="#刷新配置以生效" class="headerlink" title="刷新配置以生效"></a>刷新配置以生效</h6><p><code>sources ~/.zshrc</code></p>]]></content>
    
    
    <categories>
      
      <category>-Bash</category>
      
    </categories>
    
    
    <tags>
      
      <tag>-命令行工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/05/28/hello-world/"/>
    <url>/2022/05/28/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
